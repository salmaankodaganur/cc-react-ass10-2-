{"version":3,"sources":["mycomponent/Update.js","App.js","reportWebVitals.js","index.js"],"names":["useState","React","useRef","useLayoutEffect","Update","count","setCount","firstUpdate","current","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMACQA,EAAsCC,IAAtCD,SAAUE,EAA4BD,IAA5BC,OAAQC,EAAoBF,IAApBE,gBA0BXC,MAxBf,WACE,MAA0BJ,EAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAcL,GAAO,GAQ3B,OAPAC,GAAgB,WACVI,EAAYC,UACdD,EAAYC,SAAU,MAMxB,gCACE,kDAAqBH,EAArB,YACA,wBACEI,QAAS,WACPH,EAASD,EAAQ,IAFrB,0BCHSK,MATf,WACE,OACC,mCACA,cAAC,EAAD,OCIYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7b19bc8e.chunk.js","sourcesContent":["import React from 'react'\r\nconst { useState, useRef, useLayoutEffect } = React;\r\n\r\nfunction Update() {\r\n  const [count, setCount] = useState(0);\r\n\r\n  const firstUpdate = useRef(true);\r\n  useLayoutEffect(() => {\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <p>componentrender: {count} times</p>\r\n      <button\r\n        onClick={() => {\r\n          setCount(count + 1);\r\n        }}\r\n      >\r\n        Click Me\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Update;","\nimport './App.css';\nimport Update from './mycomponent/Update'\n\n\nfunction App() {\n  return (\n   <>\n   <Update/>\n  \n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}